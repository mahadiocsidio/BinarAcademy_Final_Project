openapi: 3.0.3
info:
  title: Learn Wise API App
  description: |-
    lorem ipsum dolor is amet
  contact:
    email: mahadiocsidio@students.amikom.ac.id
  version: 1.0.0
servers:
  - url: https://binar-academy-final-project.vercel.app
tags:
  - name: Start
    description: all about creating account or login
  - name: Account
    description: all about accounts profile
  - name: Transaction
    description: all about Transaction
  - name: Authentication
    description: all about Authentication
  - name: User Course
    description: all about Course that user have
paths:
  /auth/register:
    post:
      tags:
        - Start
      operationId: create-new-user
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  maxLength: 50
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                no_telp:
                  type: string
                  example: "123456789"
                password:
                  type: string
                  minLength: 8
                  maxLength: 15
                  example: "password123"
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      account_id:
                        type: integer
                      nama:
                        type: string
                      email:
                        type: string
                      password:
                        type: string
                      no_telp:
                        type: string
                      negara:
                        type: string
                      kota:
                        type: string
                      role:
                        type: string
                      url_image:
                        type: string
                      is_verified:
                        type: boolean
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              examples:
                InvalidName:
                  summary: Invalid Name
                  value:
                    status: false
                    message: 'Nama harus memiliki maksimal 50 karakter'
                InvalidPassword:
                  summary: Invalid Password
                  value:
                    status: false
                    message: 'Password harus memiliki minimal 8 karakter dan maksimal 15 karakter'
                InvalidEmailFormat:
                  summary: Invalid Email Format
                  value:
                    status: false
                    message: 'Format email tidak valid'
                EmailAlreadyUsed:
                  summary: Email Already Used
                  value:
                    status: false
                    message: 'Email sudah dipakai'


  /auth/verify-otp:
    post:
      tags:
        - Start
      operationId: verify-otp
      summary: Verify OTP
      requestBody:
        description: Verify OTP request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                otp:
                  type: string
                  example: 123456
      responses:
        '200':
          description: OTP verification successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Activation Code verified successfully'
                  err:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        example: user@example.com
                      otp:
                        type: string
                        example: 123456
                      is_verified:
                        type: boolean
                        example: true
        '400':
          description: Failed OTP verification
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Bad Request'
                  error:
                    type: string
                    example: 'Invalid Email or OTP'
                  data:
                    example: null

  /auth/resend-otp:
    post:
      tags:
        - Start
      operationId: resend-otp
      summary: Resend OTP
      requestBody:
        description: Resend OTP request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: OTP resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'OTP resent successfully'
                  err:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        example: user@example.com
        '400':
          description: Failed to resend OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Bad Request'
                  err:
                    type: string
                    example: 'OTP not found for the user'
                  data:
                    example : null
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Not Found'
                  err:
                    type: string
                    example: 'User not found'
                  data: 
                    example : null


  /auth/login:
    post:
      tags:
        - Start
      operationId: user-login
      summary: User login
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InB1dHJpaW5kcml5YW50aTE5MDIwM0BnbWFpbC5jb20iLCJpYXQiOjE3MDE0MDU5MDJ9.gTd_DuEmS1hfDaiDBOYFnQ9ITVw9qk_x0Yu09-04d-g"
                      user:
                        type: object
                        properties:
                          content:
                            type: object
                            properties:
                              application/json:
                                $ref: '#/components/schemas/AccountModel'
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Bad Request'
                  error:
                    type: string
                    example: 'Invalid Email or Password or OTP verification required'
                  details:
                    type: string
                    example: 'Please verify your email by entering the OTP sent to your registered email address.'

  /auth/reset-password:
    post:
      tags:
        - Start
      operationId: reset-password
      summary: Reset Password
      requestBody:
        description: Reset password request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Password reset email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Send'
                  err:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        example: user@example.com
        '400':
          description: Email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Email Not Found'
                  err:
                    type: string
                    example: 'Enter Registered Email!'
                  data:
                    example: null

  /profile:
    get:
      tags:
        - Account
      summary: Get all accounts profile
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                success: true
                data:
                  - account_id: 1
                    nama: John Doe
                    email: john@example.com
                    role: user
                    created_at: '2023-01-01T12:00:00Z'
                  - account_id: 2
                    nama: Jane Doe
                    email: jane@example.com
                    role: admin
                    created_at: '2023-01-02T14:30:00Z'
        '500':
          description: Internal Server Error

  /profile/account:
    get:
      tags:
        - Account
      summary: Get the current user's profile account
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                success: true
                data:
                  account_id: 1
                  nama: John Doe
                  email: john@example.com
                  no_telp: '+1234567890'
                  negara: 'Indonesia'
                  kota: 'Jakarta'
                  url_image: 'https://example.com/image.jpg'
        '404':
          description: Account not found
          content:
            application/json:
              example:
                success: false
                message: 'Account not found'
        '500':
          description: Internal Server Error

  /profile/updateProfile:
    put:
      tags:
        - Account
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/updateProfile"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                success: true
                data:
                  account_id: 1
                  nama: John Doe
                  email: john@example.com
                  no_telp: '+1234567890'
                  negara: 'Indonesia'
                  kota: 'Jakarta'
                  url_image: 'https://example.com/image.jpg'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                success: false
                message: 'Invalid request payload'
        '404':
          description: Account not found
          content:
            application/json:
              example:
                success: false
                message: 'Account not found'
        '500':
          description: Internal Server Error

  /profile/changePassword:
    post:
      tags:
        - Account
      summary: Change user password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        $ref: "#/components/requestBodies/changePassword"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                success: true
                message: 'Successfully changed your password'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                success: false
                message: 'Invalid request payload'
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                success: false
                message: 'Invalid current password'
        '404':
          description: Account isnt registered
          content:
            application/json:
              example:
                success: false
                message: 'Account isnt registered'
        '500':
          description: Internal Server Error
        
  /profile/paymentHistory:
    get:
      summary: Get Account's Transaction History
      security:
        - bearerAuth: []
      description: Get Account's Transaction History that have login
      tags:
        - Account
      parameters:
        - name: Authorization
          in: header
          description: JWT Bearer token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  - status: "Berhasil"
                    Course:
                      title: "Pengembangan Web 101"
                      harga: 29.99
                      level: "Pemula"
                      Kategori:
                        title: "Pemrograman Web"
                  - status: "Berhasil"
                    Course:
                      title: "JavaScript Lanjutan"
                      harga: 49.99
                      level: "Lanjutan"
                      Kategori:
                        title: "Pemrograman Web"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                success: false
                message: "Unauthorized: Token tidak valid atau tidak ada"
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                success: false
                message: "Terjadi kesalahan server"

  /class:
    get:
      summary: Get all user courses
      tags:
        - User Course
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                success: true
                data:
                  - user_course_id: 1
                    account_id: 2
                    course_id: 1
                    Course:
                      title: 'Pengembangan Web 101'
                      harga: 0
                      Kategori:
                        title: 'Web Development'
                  - user_course_id: 2
                    user_id: 102
                    course_id: 2
                    Course:
                      title: 'Dasar Ilmu Data'
                      harga: 19900
                      Kategori:
                        title: 'Data Science'
        '404':
          description: No user courses found
          content:
            application/json:
              example:
                success: false
                message: 'No user courses found'
        '500':
          description: Internal Server Error
  
  /class/myclass:
    get:
      summary: Get user courses by account ID
      security:
        - bearerAuth: []
      tags:
        - User Course
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                success: true
                data:
                  - user_course_id: 1
                    account_id: 101
                    course_id: 201
                    Course:
                      title: 'Introduction to Web Development'
                      harga: 29.99
                      Kategori:
                        title: 'Programming'
                      Riwayat_Transaksi:
                        status: 'completed'
                  - user_course_id: 2
                    account_id: 101
                    course_id: 202
                    Course:
                      title: 'Data Science Fundamentals'
                      harga: 19.99
                      Kategori:
                        title: 'Data Science'
                      Riwayat_Transaksi:
                        status: 'in-progress'
        '404':
          description: No user courses found for the account
          content:
            application/json:
              example:
                success: false
                message: 'No user courses found for the account'
        '500':
          description: Internal Server Error


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UnauthorizedResponse:
      title: UnauthorizedResponse
      type: object
      properties:
        status:
          type: boolean
          example: false
        message:
          type: string
          example: 'Unauthorized'
        data:
          example: null
    BasicResponse:
      title: BasicResponse
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: 'success'
    BadRequestResponse:
      title: BadRequestResponse
      type: object
      properties:
        status:
          type: boolean
          example: false
        message:
          type: string
          example: 'some error from user'
        data:
          example: null
    AccountResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/AccountModel'

    AccountWithMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/AccountModel'

    LogoutResponse:
      type: object
      properties:
        message:
          type: string

    DateModel:
      title: DateModel
      type: object
      properties:
        createdAt:
          type: string
          example: '2023-10-15T12:13:48.276Z'
        updatedAt:
          type: string
          example: '2023-10-15T12:13:48.276Z'

    AccountModel:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
          example: 1
        nama:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john@example.com"
        password:
          type: string
          example: "password123"
        otp:
          $ref: "#/components/schemas/OtpModel"
        no_telp:
          type: string
          example: "123456789"
        negara:
          type: string
          example: "Indonesia"
        kota:
          type: string
          example: "Jakarta"
        role:
          type: string
          example: "user"
        url_image:
          type: string
          example: "https://example.com/image.png"
        is_verified:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        User_course:
          type: array
          items:
            $ref: "#/components/schemas/User_courseModel"
        Course_progress:
          type: array
          items:
            $ref: "#/components/schemas/Course_progressModel"
        Rating:
          type: array
          items:
            $ref: "#/components/schemas/RatingModel"
        Riwayat_Transaksi:
          type: array
          items:
            $ref: "#/components/schemas/Riwayat_TransaksiModel"
        Notifikasi:
          type: array
          items:
            $ref: "#/components/schemas/NotifikasiModel"

    OtpModel:
      type: object
      properties:
        otp_id:
          type: integer
          format: int64
          example: 1
        otp:
          type: string
          example: "123456"
        created_at:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        account:
          $ref: "#/components/schemas/AccountModel"

    MentorModel:
      type: object
      properties:
        mentor_id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Mentor Name"
        job:
          type: string
          example: "Job Title"
        Mentor_course:
          type: array
          items:
            $ref: "#/components/schemas/Mentor_courseModel"
        Course:
          type: array
          items:
            $ref: "#/components/schemas/CourseModel"

    KategoriModel:
      type: object
      properties:
        kategori_id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Category Title"
        deskripsi:
          type: string
          example: "Category Description"
        url_img_preview:
          type: string
          example: "https://example.com/image.png"
        Course:
          type: array
          items:
            $ref: "#/components/schemas/CourseModel"

    CourseModel:
      type: object
      properties:
        course_id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Course Title"
        deskripsi:
          type: string
          example: "Course Description"
        kategori_id:
          type: integer
          format: int64
          example: 1
        premium:
          type: boolean
          example: false
        mentor_id:
          type: integer
          format: int64
          example: 1
        level:
          type: string
          example: "Beginner"
        harga:
          type: number
          example: 99.99
        url_image_preview:
          type: string
          example: "https://example.com/image.png"
        url_gc_tele:
          type: string
          example: "https://t.me/course_channel"
        created_at:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        Kategori:
          $ref: "#/components/schemas/KategoriModel"
        Mentor:
          $ref: "#/components/schemas/MentorModel"
        Chapter:
          type: array
          items:
            $ref: "#/components/schemas/ChapterModel"
        User_course:
          type: array
          items:
            $ref: "#/components/schemas/User_courseModel"
        Mentor_course:
          type: array
          items:
            $ref: "#/components/schemas/Mentor_courseModel"
        Course_progress:
          type: array
          items:
            $ref: "#/components/schemas/Course_progressModel"
        Rating:
          type: array
          items:
            $ref: "#/components/schemas/RatingModel"
        Promo:
          type: array
          items:
            $ref: "#/components/schemas/PromoModel"
        Riwayat_Transaksi:
          type: array
          items:
            $ref: "#/components/schemas/Riwayat_TransaksiModel"

    ChapterModel:
      type: object
      properties:
        chapter_id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Chapter Title"
        course_id:
          type: integer
          format: int64
          example: 1
        Course:
          $ref: "#/components/schemas/CourseModel"
        Video:
          type: array
          items:
            $ref: "#/components/schemas/VideoModel"

    VideoModel:
      type: object
      properties:
        video_id:
          type: integer
          format: int64
          example: 1
        chapter_id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Video Title"
        deskripsi:
          type: string
          example: "Video Description"
        url_video:
          type: string
          example: "https://example.com/video.mp4"
        is_preview:
          type: boolean
          example: false
        Chapter:
          $ref: "#/components/schemas/ChapterModel"
        Course_progress:
          type: array
          items:
            $ref: "#/components/schemas/Course_progressModel"

    User_courseModel:
      type: object
      properties:
        user_course_id:
          type: integer
          format: int64
          example: 1
        account_id:
          type: integer
          format: int64
          example: 1
        course_id:
          type: integer
          format: int64
          example: 1
        Account:
          $ref: "#/components/schemas/AccountModel"
        Course:
          $ref: "#/components/schemas/CourseModel"

    Mentor_courseModel:
      type: object
      properties:
        mentor_course_id:
          type: integer
          format: int64
          example: 1
        mentor_id:
          type: integer
          format: int64
          example: 1
        course_id:
          type: integer
          format: int64
          example: 1
        Mentor:
          $ref: "#/components/schemas/MentorModel"
        Course:
          $ref: "#/components/schemas/CourseModel"

    Course_progressModel:
      type: object
      properties:
        course_progres_id:
          type: integer
          format: int64
          example: 1
        account_id:
          type: integer
          format: int64
          example: 1
        course_id:
          type: integer
          format: int64
          example: 1
        video_id:
          type: integer
          format: int64
          example: 1
        is_done:
          type: boolean
          example: false
        last_access:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        Account:
          $ref: "#/components/schemas/AccountModel"
        Course:
          $ref: "#/components/schemas/CourseModel"
        Video:
          $ref: "#/components/schemas/VideoModel"

    RatingModel:
      type: object
      properties:
        rating_id:
          type: integer
          format: int64
          example: 1
        account_id:
          type: integer
          format: int64
          example: 1
        course_id:
          type: integer
          format: int64
          example: 1
        skor:
          type: integer
          example: 5
        comment:
          type: string
          example: "This course is great!"
        Account:
          $ref: "#/components/schemas/AccountModel"
        Course:
          $ref: "#/components/schemas/CourseModel"

    PromoModel:
      type: object
      properties:
        promo_id:
          type: integer
          format: int64
          example: 1
        course_id:
          type: integer
          format: int64
          example: 1
        deskripsi:
          type: string
          example: "Promo Description"
        tanggal_mulai:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        tanggal_selesai:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        total_promo:
          type: integer
          example: 100
        Course:
          $ref: "#/components/schemas/CourseModel"

    Riwayat_TransaksiModel:
      type: object
      properties:
        riwayat_transaksi_id:
          type: integer
          format: int64
          example: 1
        account_id:
          type: integer
          format: int64
          example: 1
        course_id:
          type: integer
          format: int64
          example: 1
        metode_pembayaran:
          type: string
          example: "Credit Card"
        tanggal_pembayaran:
          type: string
          format: date-time
          example: "2023-10-15T12:13:48.276Z"
        status:
          type: string
          example: "Success"
        Account:
          $ref: "#/components/schemas/AccountModel"
        Course:
          $ref: "#/components/schemas/CourseModel"

    NotifikasiModel:
      type: object
      properties:
        notifikasi_id:
          type: integer
          format: int64
          example: 1
        account_id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Notification Title"
        deskripsi:
          type: string
          example: "Notification Description"
        is_read:
          type: boolean
          example: false
        Account:
          $ref: "#/components/schemas/AccountModel"

  requestBodies:
    updateProfile:
      content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New name for the user
                email:
                  type: string
                  format: email
                  description: New email for the user
                no_telp:
                  type: string
                  description: New phone number for the user
                negara:
                  type: string
                  description: New country for the user
                kota:
                  type: string
                  description: New city for the user
              required:
                - name  
    
    changePassword:
      content:
          application/json:
            schema:
              type: object
              properties:
                password_lama:
                  type: string
                  description: Current password of the user
                password_baru:
                  type: string
                  description: New password for the user
                ulangi_password:
                  type: string
                  description: Confirm the new password
              required:
                - password_lama
                - password_baru
                - ulangi_password
